name: "CodeQL Analysis"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  # schedule:
  #   - cron: '0 3 * * 1'  # Lunes 3AM UTC

jobs:
  codeql_analysis:
    name: Analyze Code with CodeQL
    runs-on: ubuntu-latest   # usar runner hospedado de GitHub

    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "python"  # ajusta según tu proyecto

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: codeql-results.sarif

      - name: Upload CodeQL results as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: codeql-results.sarif

  codeql_create_engagement:
    name: Create engagement in DefectDojo - CodeQL
    needs: codeql_analysis
    runs-on: ubuntu-latest

    env:
      DEFECTDOJO_URL: "http://107.21.152.191:8080"
      DEFECTDOJO_TOKEN: "2ff51b58d24988ccb47580fd79dab1a95d193ff7"
      DEFECTDOJO_ENGAGEMENT_PERIOD: "28"
      DEFECTDOJO_ENGAGEMENT_STATUS: "In Progress"
      DEFECTDOJO_PRODUCTID: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq coreutils

      - name: Set engagement dates (UTC)
        run: |
          echo "TODAY=$(date -u +%Y-%m-%d)" >> $GITHUB_ENV
          # ¡CORREGIDO! comillas dobles para que se expanda la variable
          echo "ENDDAY=$(date -u -d \"+${DEFECTDOJO_ENGAGEMENT_PERIOD:-28} days\" +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Sanity check DefectDojo connectivity
        run: |
          set -e
          curl -fsS "${DEFECTDOJO_URL%/}/api/v2/engagements/?limit=1" \
            -H "Authorization: Token ${DEFECTDOJO_TOKEN}" \
            -H "Accept: application/json" -o /dev/null
          echo "✅ Conexión con Dojo OK"

      - name: Create engagement in DefectDojo (minimal payload)
        id: create_engagement
        shell: bash
        run: |
          set -euo pipefail

          DESC="${{ github.event.head_commit.message }}"
          if [ -z "$DESC" ]; then DESC="${{ github.event.pull_request.title }}"; fi
          if [ -z "$DESC" ]; then DESC="CodeQL run"; fi

          # Payload mínimo y compatible
          payload=$(jq -n \
            --arg name "CodeQL_#${{ github.run_id }}" \
            --arg description "$DESC" \
            --arg status "${DEFECTDOJO_ENGAGEMENT_STATUS}" \
            --arg start "${TODAY}" \
            --arg end   "${ENDDAY}" \
            --arg type  "CI/CD" \
            --argjson product ${DEFECTDOJO_PRODUCTID} \
            '{ name: $name, description: $description, status: $status,
               engagement_type: $type, target_start: $start, target_end: $end,
               product: $product }')

          echo "$payload" > payload.json

          # Sin -f para ver el cuerpo si falla
          http_code=$(curl -sS -o id.json -w "%{http_code}" -X POST \
            "${DEFECTDOJO_URL%/}/api/v2/engagements/" \
            -H "Authorization: Token ${DEFECTDOJO_TOKEN}" \
            -H "Content-Type: application/json" \
            --data @payload.json)

          echo "HTTP ${http_code}"
          cat id.json || true

          if [ "$http_code" -lt 200 ] || [ "$http_code" -ge 300 ]; then
            echo "❌ Falló la creación del engagement (HTTP ${http_code})"
            exit 1
          fi

          ENGAGEMENT_ID=$(jq -r '.id' id.json)
          echo "DEFECTDOJO_ENGAGEMENTID=${ENGAGEMENT_ID}" | tee -a defectdojo1.env
          echo "engagement_id=${ENGAGEMENT_ID}" >> "$GITHUB_OUTPUT"
          echo "✅ Engagement creado: ID=${ENGAGEMENT_ID}"

      - name: Upload debug artifacts (payload & id)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: defectdojo-debug
          path: |
            payload.json
            id.json

      - name: Upload defectdojo1.env
        uses: actions/upload-artifact@v4
        with:
          name: defectdojo1-env
          path: defectdojo1.env



