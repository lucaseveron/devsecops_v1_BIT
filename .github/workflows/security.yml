name: CodeQL + DefectDojo 

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  codeql_analysis:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python  # ajustá según tu repo

      - name: Perform CodeQL Analysis (no upload to GH)
        uses: github/codeql-action/analyze@v3
        with:
          upload: false
          output: ./codeql-sarif   # <-- directorio

      - name: Package SARIF(s)
        run: |
          ls -l ./codeql-sarif
          # si hubiera múltiples lenguajes, quedan varios .sarif
          tar -czf sarif.tgz -C ./codeql-sarif .

      - name: Upload SARIF artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif
          path: sarif.tgz

  defectdojo_upload:
    name: Create/Update Engagement + Upload to DefectDojo
    needs: codeql_analysis
    runs-on: ubuntu-latest
    env:
      DD_URL: ${{ secrets.DD_URL }}                # ej: https://tu-defectdojo
      DD_TOKEN: ${{ secrets.DD_TOKEN }}            # Token API
      DD_PRODUCT_NAME: ${{ vars.DD_PRODUCT_NAME }} # ej: "Prueba Boreal"
      DD_PRODUCT_TYPE_NAME: "GitHub Actions"       # opcional, se auto-crea si no existe
    steps:
      - uses: actions/checkout@v4

      - name: Download SARIF artifact
        uses: actions/download-artifact@v4
        with:
          name: codeql-sarif
          path: ./sarif

      - name: Install curl & jq (si hace falta)
        run: |
          if ! command -v curl >/dev/null; then sudo apt-get update && sudo apt-get install -y curl; fi
          if ! command -v jq >/dev/null; then sudo apt-get update && sudo apt-get install -y jq; fi

      - name: Extract SARIF
        run: |
          tar -xzf ./sarif/sarif.tgz -C ./sarif
          SARIF_FILE=$(ls ./sarif/*.sarif | head -n1)
          echo "SARIF_FILE=$SARIF_FILE" >> $GITHUB_ENV

      - name: Upload to DefectDojo (auto-create product/engagement)
        run: |
          set -euo pipefail
          echo "Usando SARIF: $SARIF_FILE"
          curl -sS -X POST "$DD_URL/api/v2/reimport-scan/" \
            -H "Authorization: Token $DD_TOKEN" \
            -H "accept: application/json" \
            -H "Content-Type: multipart/form-data" \
            -F "file=@${SARIF_FILE};type=application/sarif+json" \
            -F "scan_type=SARIF" \
            -F "product_name=${DD_PRODUCT_NAME}" \
            -F "product_type_name=${DD_PRODUCT_TYPE_NAME}" \
            -F "engagement_name=CodeQL_${GITHUB_REF_NAME}" \
            -F "auto_create_context=true" \
            -F "deduplication_on_engagement=true" \
            -F "close_old_findings=true" \
            -F "branch_tag=${GITHUB_REF_NAME}" \
            -F "build_id=${GITHUB_RUN_NUMBER}" \
            -F "commit_hash=${GITHUB_SHA}"
